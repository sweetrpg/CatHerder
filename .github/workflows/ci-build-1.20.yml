# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: CI (1.20)

on:
  push:
    branches: [ 1.20 ]
    paths:
      - 'src/**'
      - 'test/**'
      - build.gradle
      - gradle.properties
      - settings.gradle
  pull_request:
    branches: [ 1.20 ]
    paths:
      - 'src/**'
      - 'test/**'
      - build.gradle
      - gradle.properties
      - settings.gradle

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
        with:
          arguments: build
      - id: tag-version
        name: Create tag
        uses: SOLIDSoftworks/semver-tags@1.0.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
          tag-prefix: ''
          default-version: '0.0.1'
      - name: Commit version file
        run: |
          git config --global user.email "ci@sweetrpg.com"
          git config --global user.name "SweetRPG CI"
          echo "${{ steps.tag-version.outputs.semantic-version }}" > .release-info/1.20/VERSION
          git add .release-info/1.20/VERSION
          git commit -m "Update 1.20 VERSION file"
          git push origin
